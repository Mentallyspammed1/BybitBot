name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - feature/*
  pull_request:
    branches:
      - main
      - develop
      - feature/*
    types: [opened, reopened, synchronize, labeled, unlabeled, edited, closed]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

env:
  PIP_CACHE_DIR: ~/.cache/pip
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
  DEPLOYMENT_ENVIRONMENT: ${{ github.event.pull_request.head.ref == 'develop' && 'staging' || github.ref == 'refs/heads/main' && 'production' || 'development' }}
  DEVELOP_SIZE_MAXMB: 25
  DEPLOYMENT_SIZE_MAXMB: 125

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13-dev"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Format code with black
        run: |
          pip install black
          black .

      - name: Lint and format code with ruff
        run: |
          pip install ruff
          ruff check --fix .

      - name: Generate code with Copilot (Python only)
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Run Copilot CLI
        run: |
          npm install -g @githubnext/copilot-cli
          copilot generate --input <input-file> --output <output-file>

      - name: Run tests with pytest
        run: |
          pip install pytest pytest-cov pytest-xdist
          pytest --cov=your_package --cov-report=xml -n auto

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          flags: unittests
          name: codecov-python-${{ matrix.python_version }}
          fail_ci_if_error: true

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.python_version }}
          path: coverage.xml
          retention-days: 14

      - name: Generate build report
        run: |
          echo "Build completed for Python ${{ matrix.python_version }}"
