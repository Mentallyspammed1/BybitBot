name: Termux Code Analyzer & Packager

# Triggers for pushes, pull requests to main, and manual runs
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# Ensures only one workflow runs at a time per branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze-and-enhance:
    runs-on: ubuntu-22.04  # Explicit version for Termux compatibility

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.1

    - name: Set up Python
      uses: actions/setup-python@v5.0.0
      with:
        python-version: "3.10"

    - name: Cache pip dependencies
      uses: actions/cache@v4.0.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install base dependencies
      if: steps.cache-pip.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip==24.0
        if [ -f requirements.txt ]; then pip install -r requirements.txt; else echo "No requirements.txt found, proceeding..."; fi

    - name: Install analysis & enhancement tools
      run: |
        pip install pylint==2.17.7 flake8==7.0.0 mypy==1.8.0 black==24.2.0 isort==5.13.2 bandit==1.7.7 pylint-actions==0.3.0 termux-pkgbuild==0.11.0 autopep8 cookiecutter

    - name: List Tool Versions
      run: |
        echo "Installed tool versions:"
        pip list | grep -E 'pylint|flake8|mypy|black|isort|bandit|termux-pkgbuild|autopep8|cookiecutter'

    - name: Pylint analysis
      run: |
        pylint -f text src/ || (echo "Pylint found issues in src/. Check logs or run 'pylint src/' locally." && exit 1)
      env:
        PYLINTRC: .pylintrc  # Uses custom config if present

    - name: Pylint for GitHub
      if: github.event_name != 'workflow_dispatch'  # Skips for manual runs
      run: pylint -f actions src/ || true  # Continues even on failure for visibility

    - name: Flake8 style check
      run: flake8 src/ || (echo "Flake8 detected style issues in src/. Run 'flake8 src/' locally to debug." && exit 1)

    - name: MyPy type check
      run: mypy src/ || (echo "MyPy found type errors in src/. Run 'mypy src/' to investigate." && exit 1)

    - name: Bandit security check
      run: bandit -r src/ || (echo "Bandit detected security issues in src/. Run 'bandit -r src/' for details." && exit 1)

    - name: Isort import order check
      run: isort --check --diff src/ || echo "Import order issues detected. Run 'isort src/' locally to fix."
      continue-on-error: true

    - name: Black formatting check
      run: black --check --diff src/ || echo "Formatting issues detected. Run 'black src/' locally to fix."
      continue-on-error: true

    - name: Fix code with autopep8
      run: autopep8 --in-place --aggressive --aggressive .

    - name: Generate project template with cookiecutter
      run: cookiecutter https://github.com/audreyr/cookiecutter-pypackage.git

    - name: Run tests with pytest
      run: pytest --cov=.

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

    - name: Check for outdated dependencies
      run: npx pip-check-updates

    - name: Set up Android NDK
      uses: nttld/setup-ndk@v1.4.2
      with:
        ndk-version: r25c
        add-to-path: true
      id: setup-ndk
      env:
        ANDROID_API_LEVEL: 21  # Matches termux-pkgbuild typo

    - name: Build Termux package
      run: |
        termux-pkgbuild build src || {
          echo "Failed to build Termux package from src/. Ensure src/ contains a valid build.sh per https://wiki.termux.com/wiki/Package_management."
          exit 1
        }
        echo "Package built at packages/*.deb"

    - name: Upload Termux package artifact
      uses: actions/upload-artifact@v4.3.1
      with:
        name: termux-package
        path: packages/*.deb
        if-no-files-found: error  # Fails if no .deb is found

    - name: Completion message
      if: success()
      run: echo "Code analysis, enhancement, and Termux package build completed successfully!"

    - name: Failure message
      if: failure()
      run: echo "Analysis or build failed. Review logs for details."
